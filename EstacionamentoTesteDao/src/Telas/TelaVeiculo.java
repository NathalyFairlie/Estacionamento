/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import estacionamento1.Avulso;
import estacionamento1.Mensalista;
import estacionamento1.Veiculo;
import Dao.DaoAvulso;
import Dao.DaoMensalista;
import Dao.DaoVeiculo;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class TelaVeiculo extends javax.swing.JFrame {

    private final javax.swing.JFrame telaAnterior;
    private final DaoVeiculo daoVeiculo;
    private final DaoMensalista daoMensalista;
    private final DaoAvulso daoAvulso;

    public TelaVeiculo(javax.swing.JFrame telaAnterior) {
        initComponents();
        this.telaAnterior = telaAnterior;
        daoVeiculo = new DaoVeiculo();
        daoMensalista = new DaoMensalista();
        daoAvulso = new DaoAvulso();
        
        // Adicione um ouvinte de evento ao campo de texto txtPlaca
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                // Converte o texto para maiúsculas e define de volta ao campo de texto
                txtPlaca.setText(txtPlaca.getText().toUpperCase());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlCabecalho = new javax.swing.JPanel();
        lblCabecalho = new javax.swing.JLabel();
        lblPlaca = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        lblMarca = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        lblModelo = new javax.swing.JLabel();
        btnAvulso = new javax.swing.JButton();
        btnMensalista = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlCabecalho.setBackground(new java.awt.Color(153, 0, 153));
        pnlCabecalho.setDoubleBuffered(false);

        lblCabecalho.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCabecalho.setForeground(new java.awt.Color(255, 255, 255));
        lblCabecalho.setText("Veículo");

        javax.swing.GroupLayout pnlCabecalhoLayout = new javax.swing.GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(lblCabecalho)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblCabecalho)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        lblPlaca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPlaca.setLabelFor(txtPlaca);
        lblPlaca.setText("Placa:");

        txtPlaca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPlaca.setToolTipText("Insira Placa do veiculo aqui");
        txtPlaca.setName(""); // NOI18N

        txtMarca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMarca.setToolTipText("Insira Marca do veiculo aqui se a mesma não tiver ja cadastrada");
        txtMarca.setEnabled(false);

        lblMarca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMarca.setLabelFor(txtMarca);
        lblMarca.setText("Marca:");

        txtModelo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtModelo.setToolTipText("Insira Modelo do veiculo aqui se a mesmo não tiver ja cadastrado");
        txtModelo.setEnabled(false);

        lblModelo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblModelo.setLabelFor(txtModelo);
        lblModelo.setText("Modelo:");

        btnAvulso.setBackground(new java.awt.Color(153, 0, 153));
        btnAvulso.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAvulso.setForeground(new java.awt.Color(255, 255, 255));
        btnAvulso.setText("Avulso");
        btnAvulso.setToolTipText("Clique aqui se veiculo quer estacionar somente hoje");
        btnAvulso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvulsoActionPerformed(evt);
            }
        });

        btnMensalista.setBackground(new java.awt.Color(153, 0, 153));
        btnMensalista.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnMensalista.setForeground(new java.awt.Color(255, 255, 255));
        btnMensalista.setText("Mensalista");
        btnMensalista.setToolTipText("Clique aqui se veiculo quer se tornar mensalista");
        btnMensalista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMensalistaActionPerformed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(204, 102, 255));
        btnVoltar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(51, 51, 51));
        btnVoltar.setText("Voltar");
        btnVoltar.setToolTipText("Clique aqui para voltar a tela anterior");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnPesquisar.setBackground(new java.awt.Color(153, 0, 153));
        btnPesquisar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setToolTipText("Clique aqui para pesquisar a placa do carro");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMensalista)
                        .addGap(34, 34, 34)
                        .addComponent(btnAvulso)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMarca)
                            .addComponent(lblModelo)
                            .addComponent(lblPlaca))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                .addComponent(txtModelo))
                            .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(pnlCabecalho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlaca)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMensalista)
                    .addComponent(btnAvulso)
                    .addComponent(btnVoltar))
                .addGap(0, 24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // Fecha a tela atual
        this.dispose();

        // Verifica se a tela anterior é a TelaFinanceiro
        if (telaAnterior instanceof TelaFinanceiro) {
            // Volta para a TelaFinanceiro
            TelaFinanceiro telaFinanceiro = (TelaFinanceiro) telaAnterior;
            telaFinanceiro.setVisible(true);
        } else {
            // Caso contrário, abre a TelaInicial e limpa os campos
            TelaInicial telaInicial = new TelaInicial();
            telaInicial.limparCampos();
            telaInicial.setVisible(true);
        }

    }//GEN-LAST:event_btnVoltarActionPerformed
    private boolean verificarExistenciaPlaca(String placa) {
        try {
            for (Veiculo veiculo : daoVeiculo.listaVeiculo()) {
                if (veiculo.getPlaca().equalsIgnoreCase(placa)) {
                    return true;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Trate a exceção conforme a necessidade, como exibir uma mensagem de erro.
        }
        return false;
    }

    private void btnMensalistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMensalistaActionPerformed
        String placa = txtPlaca.getText();
        String marca = txtMarca.getText();
        String modelo = txtModelo.getText();
        LocalDate data = LocalDate.now();

        // Verifica se a placa já está presente no arquivo DaoVeiculos
        try {
            // Verifica se a placa já está presente no arquivo DaoVeiculos
            boolean placaJaExistente = false;
            for (Veiculo veiculo : daoVeiculo.listaVeiculo()) {
                if (veiculo.getPlaca().equalsIgnoreCase(placa)) {
                    placaJaExistente = true;
                    break;
                }
            }

            // Se a placa já existe, apenas adiciona o mensalista
            if (placaJaExistente) {
                // Crie uma instância de Mensalista com a placa
                Mensalista mensalista = new Mensalista(placa, data);
                
                // Abra a tela Mensalista
                this.dispose();
                TelaMensalista telaMensalista = new TelaMensalista(placa);
                telaMensalista.setVisible(true);

                // Crie um novo JTextField e configure o texto formatado para data de início de vigência
                JTextField textFieldData = new JTextField(data.toString());

                // Passe o objeto JTextField para o método setTxtInicioVigencia
                telaMensalista.setTxtInicioVigencia(textFieldData);
            } else {
                // Se a placa não existe, crie uma instância de Veiculo e adicione à lista de veículos
                Veiculo veiculo = new Veiculo(placa, marca, modelo);
                daoVeiculo.addVeiculo(veiculo);

                Mensalista mensalista = new Mensalista(placa, data);
                
                this.dispose();
                TelaMensalista telaMensalista = new TelaMensalista(placa);
                telaMensalista.setVisible(true);

                // Crie um novo JTextField e configure o texto formatado
                JTextField textFieldData = new JTextField(data.toString());

                // Passe o objeto JTextField para o método setTxtInicioVigencia
                telaMensalista.setTxtInicioVigencia(textFieldData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Trate a exceção aqui conforme necessário
        }
    }//GEN-LAST:event_btnMensalistaActionPerformed

    private void btnAvulsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvulsoActionPerformed
        String placa = txtPlaca.getText();
        String marca = txtMarca.getText();
        String modelo = txtModelo.getText();
        LocalTime horaAtual = LocalTime.now();

        // Verifica se a placa já está presente no arquivo DaoVeiculos
        boolean placaJaExistente = false;
        try {
            for (Veiculo veiculo : daoVeiculo.listaVeiculo()) {
                if (veiculo.getPlaca().equalsIgnoreCase(placa)) {
                    placaJaExistente = true;
                    break;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Trate a exceção conforme necessário, como exibir uma mensagem de erro.
        }

        if (placaJaExistente) {
            Avulso avulso = new Avulso(placa, horaAtual, LocalDate.now());
            daoAvulso.addAvulso(avulso);
            JOptionPane.showMessageDialog(this, "Cadastro de avulso salvo com sucesso!\n"
                    + "Aguarde o retorno do motorista");
            txtPlaca.setText("");
            txtMarca.setText("");
            txtModelo.setText("");

        } else {
            Veiculo veiculo = new Veiculo(placa, marca, modelo);
            try {
                daoVeiculo.addVeiculo(veiculo);
            } catch (SQLException e) {
                e.printStackTrace();
                // Trate a exceção conforme a necessidade, como exibir uma mensagem de erro.
            }
            Avulso avulso = new Avulso(placa, horaAtual, LocalDate.now());
            daoAvulso.addAvulso(avulso);

            JOptionPane.showMessageDialog(this, "Cadastro de avulso salvo com sucesso!\n"
                    + "Aguarde o retorno do motorista");

            txtPlaca.setText("");
            txtMarca.setText("");
            txtModelo.setText("");

        }


    }//GEN-LAST:event_btnAvulsoActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        String placa = txtPlaca.getText().trim();

        if (placa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha a Placa do veículo");
            return;
        }

        try {
            DaoVeiculo daoVeiculo = new DaoVeiculo();
            List<Veiculo> veiculos = daoVeiculo.listaVeiculo();

            DaoMensalista daoMensalista = new DaoMensalista();
            List<Mensalista> mensalistas = daoMensalista.listaMensalista();

            DaoAvulso daoAvulso = new DaoAvulso();
            List<Avulso> avulsos = daoAvulso.listaAvulso();

            boolean veiculoCadastrado = false;
            boolean veiculoMensalistaVigente = false;
            boolean veiculoAvulsoVigente = false;

            // Check in DaoVeiculo
            for (Veiculo veiculo : veiculos) {
                if (veiculo.getPlaca().equalsIgnoreCase(placa)) {
                    veiculoCadastrado = true;
                    // Preencher os campos txtMarca e txtModelo com os valores do veículo encontrado
                    txtMarca.setText(veiculo.getMarca());
                    txtModelo.setText(veiculo.getModelo());

                    //System.out.println("Veículo encontrado em DaoVeiculo.");
                    // Check in DaoMensalista
                    for (Mensalista mensalista : mensalistas) {
                        if (mensalista.getPlaca().equalsIgnoreCase(placa)) {
                            veiculoMensalistaVigente = true;
                            // Verificar se a vigência expirou
                            LocalDate fimContrato = mensalista.getFimContrato();
                            LocalDate dataAtual = LocalDate.now();

                            if (fimContrato != null && fimContrato.isBefore(dataAtual)) {
                                daoMensalista.removeMensalista(placa);
                                JOptionPane.showMessageDialog(this, "A vigência do mensalista expirou.");
                                return;
                            } else {
                                // Pass the information to TelaMensalista
                                this.dispose();
                                TelaMensalista telaMensalista = new TelaMensalista(placa);
                                telaMensalista.setVisible(true);
                                telaMensalista.ocultarBtnCalcular();
                                telaMensalista.ocultarBtnContinuar();
                                telaMensalista.setComboBoxDesc(mensalista.getNomeDesconto());
                                telaMensalista.setComboBoxDisable();
                                telaMensalista.setTxtMesesDisable();

                                telaMensalista.atualizarInformacoesMensalista(mensalista.getMesesContratados(),
                                        mensalista.getFimContrato());

                                return;
                            }
                        }
                    }
                }
            }

            // Check in DaoAvulso
            for (Avulso avulso : avulsos) {
                if (avulso.getPlaca().equalsIgnoreCase(placa)) {
                    veiculoAvulsoVigente = true;
                    if (avulso.getValorComDesconto() != 0.0) {
                        daoAvulso.removeAvulso(avulso.getPlaca(), avulso.getData(), avulso.getEntrada());
                        JOptionPane.showMessageDialog(this, "Pergunte ao cliente se ele deseja ser mensalista ou avulso");
                        return;
                    } else {
                        // Check in DaoAvulso

                        if (avulso.getPlaca().equalsIgnoreCase(placa)) {
                            veiculoAvulsoVigente = true;

                            // Vá diretamente para a TelaAvulso se a placa for encontrada
                            this.dispose();
                            TelaAvulso telaAvulso = new TelaAvulso(placa, "btnPesquisar");
                            telaAvulso.setVisible(true);
                            telaAvulso.ocultarBtnVoltar();
                            //System.out.println("Veículo encontrado em DaoAvulso.");
                            return;
                        }

                        //System.out.println("Veículo encontrado em DaoAvulso.");
                        return;
                    }
                }
            }

            // If the vehicle is not found in DaoVeiculo or DaoAvulso, enable and show fields
            if (!veiculoCadastrado) {
                //System.out.println("Veículo não encontrado em DaoVeiculo. Habilitando campos.");
                txtMarca.setEnabled(true);
                txtModelo.setEnabled(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao procurar a placa");
        }


    }//GEN-LAST:event_btnPesquisarActionPerformed

    public JButton getBtnAvulso() {
        return btnAvulso;
    }

    public void setBtnAvulso(JButton btnAvulso) {
        this.btnAvulso = btnAvulso;
    }

    public JButton getBtnMensalista() {
        return btnMensalista;
    }

    public void setBtnMensalista(JButton btnMensalista) {
        this.btnMensalista = btnMensalista;
    }

    public JButton getBtnPesquisar() {
        return btnPesquisar;
    }

    public void setBtnPesquisar(JButton btnPesquisar) {
        this.btnPesquisar = btnPesquisar;
    }

    public JButton getBtnVoltar() {
        return btnVoltar;
    }

    public void setBtnVoltar(JButton btnVoltar) {
        this.btnVoltar = btnVoltar;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JLabel getLblCabecalho() {
        return lblCabecalho;
    }

    public void setLblCabecalho(JLabel lblCabecalho) {
        this.lblCabecalho = lblCabecalho;
    }

    public JLabel getLblMarca() {
        return lblMarca;
    }

    public void setLblMarca(JLabel lblMarca) {
        this.lblMarca = lblMarca;
    }

    public JLabel getLblModelo() {
        return lblModelo;
    }

    public void setLblModelo(JLabel lblModelo) {
        this.lblModelo = lblModelo;
    }

    public JLabel getLblPlaca() {
        return lblPlaca;
    }

    public void setLblPlaca(JLabel lblPlaca) {
        this.lblPlaca = lblPlaca;
    }

    public JPanel getPnlCabecalho() {
        return pnlCabecalho;
    }

    public void setPnlCabecalho(JPanel pnlCabecalho) {
        this.pnlCabecalho = pnlCabecalho;
    }

    public JTextField getTxtMarca() {
        return txtMarca;
    }

    public void setTxtMarca(JTextField txtMarca) {
        this.txtMarca = txtMarca;
    }

    public JTextField getTxtModelo() {
        return txtModelo;
    }

    public void setTxtModelo(JTextField txtModelo) {
        this.txtModelo = txtModelo;
    }

    public JTextField getTxtPlaca() {
        return txtPlaca;
    }

    public void setTxtPlaca(JTextField txtPlaca) {
        this.txtPlaca = txtPlaca;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuarioSistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuarioSistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuarioSistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroUsuarioSistema.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroUsuarioSistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvulso;
    private javax.swing.JButton btnMensalista;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCabecalho;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JPanel pnlCabecalho;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables
}
